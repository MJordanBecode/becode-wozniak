import createDomElement from "./functions/createElement.js";
import randomElment from "./functions/random.js";

// Variable pour garder une r√©f√©rence √† l'intervalle
let gameInterval;
let score = 0; // Score du jeu

// Fonction pour l'apparition du monstre
export default function monsterAppearance() {
    // Cr√©ation de la div et de l'image du monstre
    const CREATE_DIV_CONTAIN_IMAGE = createDomElement('div');
    CREATE_DIV_CONTAIN_IMAGE.classList.add('container-div-img');
    
    const DISPLAY_MONSTER_IN_DIV = createDomElement('img');
    DISPLAY_MONSTER_IN_DIV.src = 'assets/images/chopper.svg';
    DISPLAY_MONSTER_IN_DIV.classList.add('redim-image-monster');

    const CONTAINER_GAME_SELECT = document.querySelector('#container-game');

    // R√©cup√®re une position al√©atoire dans les enfants de #container-game
    const postionMonster = randomElment(0, CONTAINER_GAME_SELECT.children.length);
    
    // S√©lectionner l'√©l√©ment du cercle en fonction de la position al√©atoire
    const SELECT_CIRCLE_ID = document.querySelector(`#circle-${postionMonster}`);
    
    // Ajouter le monstre dans le cercle
    SELECT_CIRCLE_ID.appendChild(CREATE_DIV_CONTAIN_IMAGE);
    CREATE_DIV_CONTAIN_IMAGE.appendChild(DISPLAY_MONSTER_IN_DIV);

    // üî• Ajout de l'√©couteur d'√©v√©nement au monstre
    DISPLAY_MONSTER_IN_DIV.addEventListener('click', () => {
        console.log(`Tu as cliqu√© sur le monstre !`);
        score += 2;  // Ajoute 2 points pour chaque clic sur le monstre
        displayScore(); // Met √† jour le score

        DISPLAY_MONSTER_IN_DIV.style.animation = "disappear 0.5s ease-out forwards";

        setTimeout(() => {
            CREATE_DIV_CONTAIN_IMAGE.remove();  // Supprime le monstre apr√®s l'animation
        }, 500);
    });

    // Log les informations
    console.log(`Le monstre se positionne dans le cercle ${postionMonster}`);
    console.log(`S√©lection du cercle :`, SELECT_CIRCLE_ID);
    console.log(`ID du cercle s√©lectionn√© : ${SELECT_CIRCLE_ID.id}`);
}

// Fonction pour afficher le score
function displayScore() {
    const SCORE_DISPLAY = document.querySelector('.score');

    if (SCORE_DISPLAY) {
        // Met √† jour l'affichage du score
        SCORE_DISPLAY.textContent = `Score : ${score}`;
    }
}

// Fonction pour d√©marrer le jeu
function startGame() {
    // D√©marre l'intervalle pour faire appara√Ætre les monstres toutes les 2 secondes
    gameInterval = setInterval(() => {
        monsterAppearance();  // Appele la fonction pour faire appara√Ætre un monstre
    }, 2000);
}

// Fonction pour arr√™ter le jeu
function stopGame() {
    if (gameInterval) {
        clearInterval(gameInterval);  // Arr√™te l'intervalle
        console.log('Jeu arr√™t√©');
    }
}

// Fonction pour r√©initialiser le jeu
function resetGame() {
    // Arr√™ter l'intervalle et r√©initialiser le score
    stopGame();
    score = 0;  // R√©initialise le score
    displayScore();  // Met √† jour l'affichage du score

    // Supprimer tous les monstres visibles (les √©l√©ments dans #container-game)
    const containers = document.querySelectorAll('.container-div-img');
    containers.forEach(container => container.remove());

    console.log('Jeu r√©initialis√©');
}

// S√©lection des boutons
document.addEventListener('DOMContentLoaded', () => {
    // S√©lection des boutons
    const START_BUTTON = document.querySelector('.button-start');
    const STOP_BUTTON = document.querySelector('.button-stop');
    const RESET_BUTTON = document.querySelector('.button-reset');

    // Ajout des √©couteurs d'√©v√©nements
    if (START_BUTTON) {
        START_BUTTON.addEventListener('click', () => {
            startGame();  // D√©marre le jeu quand le bouton start est cliqu√©
        });
    }

    if (STOP_BUTTON) {
        STOP_BUTTON.addEventListener('click', () => {
            stopGame();  // Arr√™te le jeu quand le bouton stop est cliqu√©
        });
    }

    if (RESET_BUTTON) {
        RESET_BUTTON.addEventListener('click', () => {
            resetGame();  // R√©initialise le jeu quand le bouton reset est cliqu√©
        });
    }
});

